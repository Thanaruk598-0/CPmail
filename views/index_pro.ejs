<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard - FormEase</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        'kku-blue': '#1e40af',
                        'kku-blue-light': '#3b82f6',
                        'kku-blue-dark': '#1e3a8a'
                    }
                }
            }
        }
    </script>
    <style>
        body {
            box-sizing: border-box;
        }
        .stat-card {
            transition: all 0.3s ease;
            cursor: pointer;
        }
        .stat-card:hover {
            transform: translateY(-4px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
        }
        .admin-card {
            background: white;
            border-radius: 0.75rem;
            box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1);
            transition: all 0.2s;
        }
        .admin-card:hover {
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        }
        .notification-item {
            transition: all 0.2s;
            cursor: pointer;
        }
        .notification-item:hover {
            background-color: #f9fafb;
        }
        .quick-action-btn {
            transition: all 0.2s;
        }
        .quick-action-btn:hover {
            transform: translateY(-2px);
        }
        .chart-container {
            height: 300px;
        }
        .progress-bar {
            transition: width 0.5s ease-in-out;
        }
        .status-indicator {
            width: 8px;
            height: 8px;
            border-radius: 50%;
            display: inline-block;
            margin-right: 8px;
        }
        .status-pending { background-color: #f59e0b; }
        .status-approved { background-color: #10b981; }
        .status-rejected { background-color: #ef4444; }
        .status-draft { background-color: #6b7280; }
    </style>
</head>
<body class="bg-gray-50 font-sans">
    <!-- Header -->
    <header class="bg-kku-blue text-white shadow-lg">
        <div class="container mx-auto px-4">
            <div class="flex items-center justify-between py-4">
                <div class="flex items-center space-x-3">
                    <div class="w-10 h-10 bg-white rounded-full flex items-center justify-center">
                        <span class="text-kku-blue font-bold text-lg">F</span>
                    </div>
                    <div>
                        <h1 class="text-xl font-bold">FormEase Admin</h1>
                        <p class="text-blue-200 text-sm">Faculty of Computer Science</p>
                    </div>
                </div>
                <div class="flex items-center space-x-4">
                    <div class="hidden md:block text-right">
                        <p class="text-sm font-medium">Admin User</p>
                        <p class="text-blue-200 text-xs">System Administrator</p>
                    </div>
                    <div class="relative">
                        <button onclick="toggleNotifications()" class="relative p-2 bg-kku-blue-light hover:bg-kku-blue-dark rounded-full transition-colors">
                            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 17h5l-5 5v-5zM4 19h10a2 2 0 002-2V7a2 2 0 00-2-2H4a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
                            </svg>
                            <span class="absolute -top-1 -right-1 bg-red-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center">5</span>
                        </button>
                    </div>
                    <button onclick="logout()" class="bg-kku-blue-light hover:bg-kku-blue-dark px-3 py-2 rounded-md text-sm font-medium transition-colors">
                        Logout
                    </button>
                </div>
            </div>
        </div>
    </header>

    <!-- Navigation -->
    <nav class="bg-white shadow-sm border-b">
        <div class="container mx-auto px-4">
            <div class="flex space-x-8 overflow-x-auto">
                <a href="#" class="py-3 px-1 border-b-2 border-kku-blue text-kku-blue font-medium whitespace-nowrap">
                    Dashboard
                </a>
                <a href="#" onclick="goToManageUsers()" class="py-3 px-1 text-gray-500 hover:text-kku-blue font-medium whitespace-nowrap transition-colors">
                    Manage Users
                </a>
                <a href="#" onclick="goToManageCourses()" class="py-3 px-1 text-gray-500 hover:text-kku-blue font-medium whitespace-nowrap transition-colors">
                    Courses & Sections
                </a>
                <a href="#" onclick="goToManageTemplates()" class="py-3 px-1 text-gray-500 hover:text-kku-blue font-medium whitespace-nowrap transition-colors">
                    Form Templates
                </a>
                <a href="#" onclick="goToViewAllForms()" class="py-3 px-1 text-gray-500 hover:text-kku-blue font-medium whitespace-nowrap transition-colors">
                    All Forms
                </a>
                <a href="#" onclick="goToSystemSettings()" class="py-3 px-1 text-gray-500 hover:text-kku-blue font-medium whitespace-nowrap transition-colors">
                    Settings
                </a>
            </div>
        </div>
    </nav>

    <!-- Main Content -->
    <main class="container mx-auto px-4 py-6">
        <!-- Page Header -->
        <div class="mb-6">
            <h2 class="text-2xl font-bold text-gray-900 mb-2">Admin Dashboard</h2>
            <p class="text-gray-600">Monitor and manage the FormEase system.</p>
        </div>

        <!-- System Status Alert -->
        <div id="systemStatusAlert" class="mb-6 bg-green-100 border border-green-200 text-green-800 px-4 py-3 rounded-md">
            <div class="flex items-center">
                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
                <span class="font-medium">System Status: All services operational</span>
                <span class="ml-auto text-sm">Last updated: <span id="lastUpdated">2 minutes ago</span></span>
            </div>
        </div>

        <!-- Statistics Overview -->
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
            <!-- Total Forms -->
            <div class="stat-card admin-card p-6" onclick="viewAllForms()">
                <div class="flex items-center justify-between">
                    <div>
                        <p class="text-sm font-medium text-gray-600">Total Forms</p>
                        <p class="text-3xl font-bold text-gray-900" id="totalFormsCount">1,247</p>
                        <p class="text-sm text-green-600 mt-1">
                            <span class="inline-flex items-center">
                                <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 10l7-7m0 0l7 7m-7-7v18"></path>
                                </svg>
                                +12% from last month
                            </span>
                        </p>
                    </div>
                    <div class="bg-blue-100 p-3 rounded-full">
                        <svg class="w-8 h-8 text-kku-blue" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                        </svg>
                    </div>
                </div>
            </div>

            <!-- Pending Forms -->
            <div class="stat-card admin-card p-6" onclick="viewPendingForms()">
                <div class="flex items-center justify-between">
                    <div>
                        <p class="text-sm font-medium text-gray-600">Pending Review</p>
                        <p class="text-3xl font-bold text-yellow-600" id="pendingFormsCount">89</p>
                        <p class="text-sm text-yellow-600 mt-1">
                            <span class="inline-flex items-center">
                                <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                </svg>
                                Requires attention
                            </span>
                        </p>
                    </div>
                    <div class="bg-yellow-100 p-3 rounded-full">
                        <svg class="w-8 h-8 text-yellow-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                        </svg>
                    </div>
                </div>
            </div>

            <!-- Approved Forms -->
            <div class="stat-card admin-card p-6" onclick="viewApprovedForms()">
                <div class="flex items-center justify-between">
                    <div>
                        <p class="text-sm font-medium text-gray-600">Approved</p>
                        <p class="text-3xl font-bold text-green-600" id="approvedFormsCount">1,098</p>
                        <p class="text-sm text-green-600 mt-1">
                            <span class="inline-flex items-center">
                                <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                </svg>
                                88% approval rate
                            </span>
                        </p>
                    </div>
                    <div class="bg-green-100 p-3 rounded-full">
                        <svg class="w-8 h-8 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                        </svg>
                    </div>
                </div>
            </div>

            <!-- Rejected Forms -->
            <div class="stat-card admin-card p-6" onclick="viewRejectedForms()">
                <div class="flex items-center justify-between">
                    <div>
                        <p class="text-sm font-medium text-gray-600">Rejected</p>
                        <p class="text-3xl font-bold text-red-600" id="rejectedFormsCount">60</p>
                        <p class="text-sm text-red-600 mt-1">
                            <span class="inline-flex items-center">
                                <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                                </svg>
                                5% rejection rate
                            </span>
                        </p>
                    </div>
                    <div class="bg-red-100 p-3 rounded-full">
                        <svg class="w-8 h-8 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                        </svg>
                    </div>
                </div>
            </div>
        </div>

        <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
            <!-- Main Content Area -->
            <div class="lg:col-span-2 space-y-6">
                <!-- Recent Activity -->
                <div class="admin-card">
                    <div class="p-6 border-b border-gray-200">
                        <div class="flex items-center justify-between">
                            <h3 class="text-lg font-semibold text-gray-900">Recent Activity</h3>
                            <button onclick="refreshActivity()" class="text-kku-blue hover:text-kku-blue-dark text-sm font-medium">
                                Refresh
                            </button>
                        </div>
                    </div>
                    <div class="p-6">
                        <div id="recentActivityContainer" class="space-y-4">
                            <!-- Activity items will be populated here -->
                        </div>
                    </div>
                </div>

                <!-- Form Status Distribution -->
                <div class="admin-card">
                    <div class="p-6 border-b border-gray-200">
                        <h3 class="text-lg font-semibold text-gray-900">Form Status Distribution</h3>
                        <p class="text-sm text-gray-600 mt-1">Overview of form statuses across all departments</p>
                    </div>
                    <div class="p-6">
                        <div class="space-y-4">
                            <div class="flex items-center justify-between">
                                <div class="flex items-center">
                                    <span class="status-indicator status-approved"></span>
                                    <span class="text-sm font-medium text-gray-700">Approved</span>
                                </div>
                                <div class="flex items-center space-x-2">
                                    <div class="w-32 bg-gray-200 rounded-full h-2">
                                        <div class="bg-green-500 h-2 rounded-full progress-bar" style="width: 88%"></div>
                                    </div>
                                    <span class="text-sm text-gray-600 w-12">88%</span>
                                </div>
                            </div>
                            <div class="flex items-center justify-between">
                                <div class="flex items-center">
                                    <span class="status-indicator status-pending"></span>
                                    <span class="text-sm font-medium text-gray-700">Pending</span>
                                </div>
                                <div class="flex items-center space-x-2">
                                    <div class="w-32 bg-gray-200 rounded-full h-2">
                                        <div class="bg-yellow-500 h-2 rounded-full progress-bar" style="width: 7%"></div>
                                    </div>
                                    <span class="text-sm text-gray-600 w-12">7%</span>
                                </div>
                            </div>
                            <div class="flex items-center justify-between">
                                <div class="flex items-center">
                                    <span class="status-indicator status-rejected"></span>
                                    <span class="text-sm font-medium text-gray-700">Rejected</span>
                                </div>
                                <div class="flex items-center space-x-2">
                                    <div class="w-32 bg-gray-200 rounded-full h-2">
                                        <div class="bg-red-500 h-2 rounded-full progress-bar" style="width: 5%"></div>
                                    </div>
                                    <span class="text-sm text-gray-600 w-12">5%</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Quick Actions -->
                <div class="admin-card">
                    <div class="p-6 border-b border-gray-200">
                        <h3 class="text-lg font-semibold text-gray-900">Quick Actions</h3>
                    </div>
                    <div class="p-6">
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                            <button onclick="goToManageUsers()" class="quick-action-btn bg-kku-blue text-white p-4 rounded-lg hover:bg-kku-blue-dark transition-colors text-left">
                                <div class="flex items-center space-x-3">
                                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z"></path>
                                    </svg>
                                    <div>
                                        <p class="font-medium">Manage Users</p>
                                        <p class="text-sm text-blue-200">Add, edit, or remove users</p>
                                    </div>
                                </div>
                            </button>
                            
                            <button onclick="goToManageCourses()" class="quick-action-btn bg-green-600 text-white p-4 rounded-lg hover:bg-green-700 transition-colors text-left">
                                <div class="flex items-center space-x-3">
                                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"></path>
                                    </svg>
                                    <div>
                                        <p class="font-medium">Manage Courses</p>
                                        <p class="text-sm text-green-200">Configure courses & sections</p>
                                    </div>
                                </div>
                            </button>
                            
                            <button onclick="goToManageTemplates()" class="quick-action-btn bg-purple-600 text-white p-4 rounded-lg hover:bg-purple-700 transition-colors text-left">
                                <div class="flex items-center space-x-3">
                                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                                    </svg>
                                    <div>
                                        <p class="font-medium">Form Templates</p>
                                        <p class="text-sm text-purple-200">Create & manage templates</p>
                                    </div>
                                </div>
                            </button>
                            
                            <button onclick="generateReport()" class="quick-action-btn bg-orange-600 text-white p-4 rounded-lg hover:bg-orange-700 transition-colors text-left">
                                <div class="flex items-center space-x-3">
                                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                                    </svg>
                                    <div>
                                        <p class="font-medium">Generate Report</p>
                                        <p class="text-sm text-orange-200">System usage analytics</p>
                                    </div>
                                </div>
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Sidebar -->
            <div class="space-y-6">
                <!-- Notifications Panel -->
                <div class="admin-card">
                    <div class="p-6 border-b border-gray-200">
                        <div class="flex items-center justify-between">
                            <h3 class="text-lg font-semibold text-gray-900">Notifications</h3>
                            <span class="bg-red-100 text-red-800 text-xs font-medium px-2 py-1 rounded-full" id="notificationCount">5</span>
                        </div>
                    </div>
                    <div class="max-h-96 overflow-y-auto">
                        <div id="notificationsContainer" class="divide-y divide-gray-200">
                            <!-- Notifications will be populated here -->
                        </div>
                    </div>
                    <div class="p-4 border-t border-gray-200">
                        <button onclick="viewAllNotifications()" class="w-full text-center text-kku-blue hover:text-kku-blue-dark text-sm font-medium">
                            View All Notifications
                        </button>
                    </div>
                </div>

                <!-- System Health -->
                <div class="admin-card">
                    <div class="p-6 border-b border-gray-200">
                        <h3 class="text-lg font-semibold text-gray-900">System Health</h3>
                    </div>
                    <div class="p-6 space-y-4">
                        <div class="flex items-center justify-between">
                            <span class="text-sm text-gray-600">Database</span>
                            <div class="flex items-center">
                                <div class="w-2 h-2 bg-green-500 rounded-full mr-2"></div>
                                <span class="text-sm font-medium text-green-600">Healthy</span>
                            </div>
                        </div>
                        <div class="flex items-center justify-between">
                            <span class="text-sm text-gray-600">API Services</span>
                            <div class="flex items-center">
                                <div class="w-2 h-2 bg-green-500 rounded-full mr-2"></div>
                                <span class="text-sm font-medium text-green-600">Online</span>
                            </div>
                        </div>
                        <div class="flex items-center justify-between">
                            <span class="text-sm text-gray-600">Email Service</span>
                            <div class="flex items-center">
                                <div class="w-2 h-2 bg-yellow-500 rounded-full mr-2"></div>
                                <span class="text-sm font-medium text-yellow-600">Slow</span>
                            </div>
                        </div>
                        <div class="flex items-center justify-between">
                            <span class="text-sm text-gray-600">Storage</span>
                            <div class="flex items-center">
                                <div class="w-2 h-2 bg-green-500 rounded-full mr-2"></div>
                                <span class="text-sm font-medium text-green-600">78% Used</span>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Recent Users -->
                <div class="admin-card">
                    <div class="p-6 border-b border-gray-200">
                        <h3 class="text-lg font-semibold text-gray-900">Recent Users</h3>
                    </div>
                    <div class="p-6">
                        <div id="recentUsersContainer" class="space-y-3">
                            <!-- Recent users will be populated here -->
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </main>

    <!-- Loading Modal -->
    <div id="loadingModal" class="hidden fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50">
        <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
            <div class="mt-3 text-center">
                <div class="mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-blue-100">
                    <svg class="animate-spin h-6 w-6 text-kku-blue" fill="none" viewBox="0 0 24 24">
                        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                    </svg>
                </div>
                <h3 class="text-lg leading-6 font-medium text-gray-900 mt-4" id="loadingTitle">Loading</h3>
                <div class="mt-2 px-7 py-3">
                    <p class="text-sm text-gray-500" id="loadingMessage">Please wait...</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Footer -->
    <footer class="bg-gray-100 text-gray-600 py-4 text-center text-sm mt-8">
        <p>&copy; 2024 Faculty of Computer Science, Khon Kaen University. All rights reserved.</p>
    </footer>

    <script>
        // Sample data - replace with API calls
        let systemStats = {
            totalForms: 1247,
            pendingForms: 89,
            approvedForms: 1098,
            rejectedForms: 60
        };

        let notifications = [
            {
                id: 1,
                type: 'urgent',
                title: 'System Maintenance Scheduled',
                message: 'Scheduled maintenance on Sunday 2:00 AM - 4:00 AM',
                time: '5 minutes ago',
                read: false
            },
            {
                id: 2,
                type: 'warning',
                title: 'High Form Submission Volume',
                message: '150+ forms submitted in the last hour',
                time: '15 minutes ago',
                read: false
            },
            {
                id: 3,
                type: 'info',
                title: 'New User Registration',
                message: 'Dr. Jane Smith has registered as a lecturer',
                time: '1 hour ago',
                read: false
            },
            {
                id: 4,
                type: 'success',
                title: 'Backup Completed',
                message: 'Daily system backup completed successfully',
                time: '2 hours ago',
                read: true
            },
            {
                id: 5,
                type: 'warning',
                title: 'Storage Usage Alert',
                message: 'Storage usage has reached 78% capacity',
                time: '3 hours ago',
                read: false
            }
        ];

        let recentActivity = [
            {
                action: 'Form Approved',
                user: 'Dr. Sarah Johnson',
                details: 'Course Registration Form #FR-2024-001',
                time: '2 minutes ago',
                type: 'approval'
            },
            {
                action: 'User Created',
                user: 'Admin',
                details: 'New lecturer account for Dr. Mike Wilson',
                time: '15 minutes ago',
                type: 'user'
            },
            {
                action: 'Form Rejected',
                user: 'Dr. Robert Chen',
                details: 'Leave Application #LA-2024-045 - Missing documents',
                time: '32 minutes ago',
                type: 'rejection'
            },
            {
                action: 'Template Updated',
                user: 'Admin',
                details: 'Course Evaluation template modified',
                time: '1 hour ago',
                type: 'template'
            },
            {
                action: 'Bulk Approval',
                user: 'Dr. Lisa Anderson',
                details: '12 forms approved for CS Department',
                time: '2 hours ago',
                type: 'approval'
            }
        ];

        let recentUsers = [
            { name: 'Dr. Jane Smith', role: 'Lecturer', status: 'online', lastSeen: 'Active now' },
            { name: 'John Doe', role: 'Student', status: 'offline', lastSeen: '5 min ago' },
            { name: 'Dr. Mike Wilson', role: 'Lecturer', status: 'online', lastSeen: 'Active now' },
            { name: 'Sarah Johnson', role: 'Admin', status: 'online', lastSeen: 'Active now' },
            { name: 'Alex Chen', role: 'Student', status: 'offline', lastSeen: '1 hour ago' }
        ];

        // Initialize the dashboard
        document.addEventListener('DOMContentLoaded', function() {
            loadDashboardData();
            renderNotifications();
            renderRecentActivity();
            renderRecentUsers();
            updateLastUpdatedTime();
            
            // Auto-refresh data every 30 seconds
            setInterval(refreshDashboardData, 30000);
        });

        // Load dashboard data
        async function loadDashboardData() {
            try {
                showLoadingModal('Loading Dashboard', 'Fetching latest system data...');
                
                // Simulate API calls
                await Promise.all([
                    fetchSystemStatsAPI(),
                    fetchNotificationsAPI(),
                    fetchRecentActivityAPI()
                ]);
                
                updateStatistics();
                hideLoadingModal();
            } catch (error) {
                hideLoadingModal();
                console.error('Error loading dashboard data:', error);
                showSystemAlert('Error loading dashboard data. Please refresh the page.', 'error');
            }
        }

        // Update statistics display
        function updateStatistics() {
            document.getElementById('totalFormsCount').textContent = systemStats.totalForms.toLocaleString();
            document.getElementById('pendingFormsCount').textContent = systemStats.pendingForms.toLocaleString();
            document.getElementById('approvedFormsCount').textContent = systemStats.approvedForms.toLocaleString();
            document.getElementById('rejectedFormsCount').textContent = systemStats.rejectedForms.toLocaleString();
        }

        // Render notifications
        function renderNotifications() {
            const container = document.getElementById('notificationsContainer');
            const unreadCount = notifications.filter(n => !n.read).length;
            
            document.getElementById('notificationCount').textContent = unreadCount;
            
            container.innerHTML = notifications.map(notification => `
                <div class="notification-item p-4 ${notification.read ? 'opacity-60' : ''}" onclick="markAsRead(${notification.id})">
                    <div class="flex items-start space-x-3">
                        <div class="flex-shrink-0">
                            ${getNotificationIcon(notification.type)}
                        </div>
                        <div class="flex-1 min-w-0">
                            <p class="text-sm font-medium text-gray-900">${notification.title}</p>
                            <p class="text-sm text-gray-600 mt-1">${notification.message}</p>
                            <p class="text-xs text-gray-500 mt-1">${notification.time}</p>
                        </div>
                        ${!notification.read ? '<div class="w-2 h-2 bg-blue-500 rounded-full flex-shrink-0 mt-2"></div>' : ''}
                    </div>
                </div>
            `).join('');
        }

        // Get notification icon based on type
        function getNotificationIcon(type) {
            const icons = {
                urgent: '<div class="w-8 h-8 bg-red-100 rounded-full flex items-center justify-center"><svg class="w-4 h-4 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5c-.77.833.192 2.5 1.732 2.5z"></path></svg></div>',
                warning: '<div class="w-8 h-8 bg-yellow-100 rounded-full flex items-center justify-center"><svg class="w-4 h-4 text-yellow-600" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5c-.77.833.192 2.5 1.732 2.5z"></path></svg></div>',
                info: '<div class="w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center"><svg class="w-4 h-4 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg></div>',
                success: '<div class="w-8 h-8 bg-green-100 rounded-full flex items-center justify-center"><svg class="w-4 h-4 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg></div>'
            };
            return icons[type] || icons.info;
        }

        // Render recent activity
        function renderRecentActivity() {
            const container = document.getElementById('recentActivityContainer');
            
            container.innerHTML = recentActivity.map(activity => `
                <div class="flex items-start space-x-3 p-3 bg-gray-50 rounded-lg">
                    <div class="flex-shrink-0">
                        ${getActivityIcon(activity.type)}
                    </div>
                    <div class="flex-1 min-w-0">
                        <p class="text-sm font-medium text-gray-900">${activity.action}</p>
                        <p class="text-sm text-gray-600">by ${activity.user}</p>
                        <p class="text-sm text-gray-500 mt-1">${activity.details}</p>
                        <p class="text-xs text-gray-400 mt-1">${activity.time}</p>
                    </div>
                </div>
            `).join('');
        }

        // Get activity icon based on type
        function getActivityIcon(type) {
            const icons = {
                approval: '<div class="w-8 h-8 bg-green-100 rounded-full flex items-center justify-center"><svg class="w-4 h-4 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg></div>',
                rejection: '<div class="w-8 h-8 bg-red-100 rounded-full flex items-center justify-center"><svg class="w-4 h-4 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path></svg></div>',
                user: '<div class="w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center"><svg class="w-4 h-4 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path></svg></div>',
                template: '<div class="w-8 h-8 bg-purple-100 rounded-full flex items-center justify-center"><svg class="w-4 h-4 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path></svg></div>'
            };
            return icons[type] || icons.user;
        }

        // Render recent users
        function renderRecentUsers() {
            const container = document.getElementById('recentUsersContainer');
            
            container.innerHTML = recentUsers.map(user => `
                <div class="flex items-center space-x-3">
                    <div class="flex-shrink-0">
                        <div class="w-8 h-8 bg-gray-300 rounded-full flex items-center justify-center">
                            <span class="text-xs font-medium text-gray-700">${user.name.split(' ').map(n => n[0]).join('')}</span>
                        </div>
                    </div>
                    <div class="flex-1 min-w-0">
                        <p class="text-sm font-medium text-gray-900">${user.name}</p>
                        <div class="flex items-center space-x-2">
                            <span class="text-xs text-gray-500">${user.role}</span>
                            <div class="w-2 h-2 ${user.status === 'online' ? 'bg-green-500' : 'bg-gray-400'} rounded-full"></div>
                        </div>
                    </div>
                    <div class="text-xs text-gray-400">
                        ${user.lastSeen}
                    </div>
                </div>
            `).join('');
        }

        // Mark notification as read
        function markAsRead(notificationId) {
            const notification = notifications.find(n => n.id === notificationId);
            if (notification) {
                notification.read = true;
                renderNotifications();
            }
        }

        // Refresh dashboard data
        async function refreshDashboardData() {
            try {
                await Promise.all([
                    fetchSystemStatsAPI(),
                    fetchNotificationsAPI(),
                    fetchRecentActivityAPI()
                ]);
                
                updateStatistics();
                renderNotifications();
                renderRecentActivity();
                updateLastUpdatedTime();
            } catch (error) {
                console.error('Error refreshing dashboard data:', error);
            }
        }

        // Update last updated time
        function updateLastUpdatedTime() {
            document.getElementById('lastUpdated').textContent = 'Just now';
        }

        // Show/hide loading modal
        function showLoadingModal(title, message) {
            document.getElementById('loadingTitle').textContent = title;
            document.getElementById('loadingMessage').textContent = message;
            document.getElementById('loadingModal').classList.remove('hidden');
        }

        function hideLoadingModal() {
            document.getElementById('loadingModal').classList.add('hidden');
        }

        // Show system alert
        function showSystemAlert(message, type) {
            const alertElement = document.getElementById('systemStatusAlert');
            const alertClass = type === 'error' ? 'bg-red-100 border-red-200 text-red-800' : 'bg-green-100 border-green-200 text-green-800';
            
            alertElement.className = `mb-6 ${alertClass} px-4 py-3 rounded-md`;
            alertElement.querySelector('span').textContent = message;
        }

        // API simulation functions
        async function fetchSystemStatsAPI() {
            await new Promise(resolve => setTimeout(resolve, 1000));
            
            // Simulate slight changes in stats
            systemStats.totalForms += Math.floor(Math.random() * 3);
            systemStats.pendingForms += Math.floor(Math.random() * 2) - 1;
            
            return systemStats;
        }

        async function fetchNotificationsAPI() {
            await new Promise(resolve => setTimeout(resolve, 800));
            return notifications;
        }

        async function fetchRecentActivityAPI() {
            await new Promise(resolve => setTimeout(resolve, 600));
            return recentActivity;
        }

        // Navigation functions
        function goToManageUsers() {
            showLoadingModal('Loading Users', 'Navigating to user management...');
            setTimeout(() => {
                hideLoadingModal();
                alert('Navigating to Manage Users page...');
                // window.location.href = '/admin/users';
            }, 1500);
        }

        function goToManageCourses() {
            showLoadingModal('Loading Courses', 'Navigating to course management...');
            setTimeout(() => {
                hideLoadingModal();
                alert('Navigating to Manage Courses & Sections page...');
                // window.location.href = '/admin/courses';
            }, 1500);
        }

        function goToManageTemplates() {
            showLoadingModal('Loading Templates', 'Navigating to template management...');
            setTimeout(() => {
                hideLoadingModal();
                alert('Navigating to Manage Form Templates page...');
                // window.location.href = '/admin/templates';
            }, 1500);
        }

        function goToViewAllForms() {
            showLoadingModal('Loading Forms', 'Fetching all forms...');
            setTimeout(() => {
                hideLoadingModal();
                alert('Navigating to View All Forms page...');
                // window.location.href = '/admin/forms';
            }, 1500);
        }

        function goToSystemSettings() {
            alert('Navigating to System Settings...');
            // window.location.href = '/admin/settings';
        }

        // Quick action functions
        function viewAllForms() {
            goToViewAllForms();
        }

        function viewPendingForms() {
            showLoadingModal('Loading Pending Forms', 'Fetching pending forms...');
            setTimeout(() => {
                hideLoadingModal();
                alert('Showing pending forms...');
                // window.location.href = '/admin/forms?status=pending';
            }, 1500);
        }

        function viewApprovedForms() {
            showLoadingModal('Loading Approved Forms', 'Fetching approved forms...');
            setTimeout(() => {
                hideLoadingModal();
                alert('Showing approved forms...');
                // window.location.href = '/admin/forms?status=approved';
            }, 1500);
        }

        function viewRejectedForms() {
            showLoadingModal('Loading Rejected Forms', 'Fetching rejected forms...');
            setTimeout(() => {
                hideLoadingModal();
                alert('Showing rejected forms...');
                // window.location.href = '/admin/forms?status=rejected';
            }, 1500);
        }

        function generateReport() {
            showLoadingModal('Generating Report', 'Creating system usage report...');
            setTimeout(() => {
                hideLoadingModal();
                alert('System report generated successfully! Download will begin shortly.');
                // Trigger report download
            }, 2000);
        }

        function refreshActivity() {
            showLoadingModal('Refreshing Activity', 'Fetching latest activity...');
            setTimeout(() => {
                hideLoadingModal();
                renderRecentActivity();
                showSystemAlert('Activity refreshed successfully!', 'success');
                setTimeout(() => {
                    showSystemAlert('System Status: All services operational', 'success');
                }, 3000);
            }, 1000);
        }

        function viewAllNotifications() {
            alert('Opening all notifications...');
            // window.location.href = '/admin/notifications';
        }

        function toggleNotifications() {
            alert('Notification panel toggled');
            // Toggle notification dropdown
        }

        function logout() {
            if (confirm('Are you sure you want to logout?')) {
                showLoadingModal('Logging Out', 'Signing you out securely...');
                setTimeout(() => {
                    alert('Logged out successfully');
                    // window.location.href = '/logout';
                }, 1500);
            }
        }
    </script>
<script>(function(){function c(){var b=a.contentDocument||a.contentWindow.document;if(b){var d=b.createElement('script');d.innerHTML="window.__CF$cv$params={r:'9886032f820dd334',t:'MTc1OTQyNzExNS4wMDAwMDA='};var a=document.createElement('script');a.nonce='';a.src='/cdn-cgi/challenge-platform/scripts/jsd/main.js';document.getElementsByTagName('head')[0].appendChild(a);";b.getElementsByTagName('head')[0].appendChild(d)}}if(document.body){var a=document.createElement('iframe');a.height=1;a.width=1;a.style.position='absolute';a.style.top=0;a.style.left=0;a.style.border='none';a.style.visibility='hidden';document.body.appendChild(a);if('loading'!==document.readyState)c();else if(window.addEventListener)document.addEventListener('DOMContentLoaded',c);else{var e=document.onreadystatechange||function(){};document.onreadystatechange=function(b){e(b);'loading'!==document.readyState&&(document.onreadystatechange=e,c())}}}})();</script></body>
</html>


