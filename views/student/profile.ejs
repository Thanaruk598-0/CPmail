<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Profile Settings - CPmail</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <script>
    tailwind.config = {
      theme: {
        extend: {
          colors: {
            'kku-blue': '#1e40af',
            'kku-blue-light': '#3b82f6',
            'kku-blue-dark': '#1e3a8a'
          }
        }
      }
    }
  </script>
  <style>
    body { box-sizing: border-box; }
    .profile-avatar { width: 120px; height: 120px; border-radius: 50%; display: flex; align-items: center; justify-content: center; overflow: hidden; border: 4px solid #e5e7eb; }
    .profile-avatar img { width: 100%; height: 100%; object-fit: cover; }
    .form-section { background: white; border-radius: 0.5rem; box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1); margin-bottom: 1.5rem; }
    .success-message { background-color: #dcfce7; border: 1px solid #bbf7d0; color: #166534; }
    .error-message { background-color: #fee2e2; border: 1px solid #fecaca; color: #991b1b; }
  </style>
</head>
<body class="bg-gray-50 font-sans">
  <!-- Header -->
  <header class="bg-kku-blue text-white shadow-lg">
    <div class="container mx-auto px-4">
      <div class="flex items-center justify-between py-4">
        <div class="flex items-center space-x-3">
          <div class="w-10 h-10 bg-white rounded-full flex items-center justify-center">
            <span class="text-kku-blue font-bold text-lg">F</span>
          </div>
          <div>
            <h1 class="text-xl font-bold">FormEase</h1>
            <p class="text-blue-200 text-sm">College of Computing</p>
          </div>
        </div>
        <div class="flex items-center space-x-4">
          <div class="hidden md:block text-right">
            <p class="text-sm font-medium"><%= student?.name %></p>
            <p class="text-blue-200 text-xs">ID: <%= student?.universityId %></p>
          </div>
          <button onclick="goToDashboard()" class="bg-kku-blue-light hover:bg-kku-blue-dark px-3 py-2 rounded-md text-sm font-medium transition-colors">
            Dashboard
          </button>
        </div>
      </div>
    </div>
  </header>

  <!-- Navigation -->
  <nav class="bg-white shadow-sm border-b">
    <div class="container mx-auto px-4">
      <div class="flex space-x-8 overflow-x-auto">
        <a href="/student" class="py-3 px-1 text-gray-500 hover:text-kku-blue font-medium whitespace-nowrap transition-colors">Dashboard</a>
        <a href="/student/submitform" class="py-3 px-1 text-gray-500 hover:text-kku-blue font-medium whitespace-nowrap transition-colors">Submit Form</a>
        <a href="/student/formhistory" class="py-3 px-1 text-gray-500 hover:text-kku-blue font-medium whitespace-nowrap transition-colors">Form History</a>
        <a href="/student/profile" class="py-3 px-1 border-b-2 border-kku-blue text-kku-blue font-medium whitespace-nowrap">Profile Settings</a>
      </div>
    </div>
  </nav>

  <!-- Main Content -->
  <main class="container mx-auto px-4 py-6">
    <!-- Page Header -->
    <div class="mb-6">
      <h2 class="text-2xl font-bold text-gray-900 mb-2">Profile Settings</h2>
      <p class="text-gray-600">Manage your personal information and account settings.</p>
    </div>

    <!-- Success/Error Messages -->
    <% if (message) { %>
      <div class="mb-6">
        <div class="success-message p-4 rounded-md text-sm font-medium"><%= message %></div>
      </div>
    <% } %>
    <% if (error) { %>
      <div class="mb-6">
        <div class="error-message p-4 rounded-md text-sm font-medium"><%= error %></div>
      </div>
    <% } %>

    <div class="grid grid-cols-1 lg:grid-cols-3 gap-6 items-start">
      <!-- Profile Overview -->
      <div class="lg:col-span-1">
        <div class="form-section p-6">
          <div class="text-center">
            <div class="mb-6 mx-auto flex items-center justify-center">
              <div class="relative">
                <!-- Avatar -->
                <div id="avatarWrapper"
                    class="profile-avatar cursor-pointer ring-1 ring-gray-300 shadow-sm
                            hover:ring-kku-blue/30 transition-colors">
                  <img
                    id="avatarPreview"
                    src="<%= (student?.avatarUrl && student.avatarUrl.trim() !== '') ? student.avatarUrl : '/uploads/default.jpg' %>"
                    data-original="<%= (student?.avatarUrl && student.avatarUrl.trim() !== '') ? student.avatarUrl : '/uploads/default.jpg' %>"
                    alt="Profile picture of <%= student?.name || 'student' %>">
                </div>

                <!-- Camera button (formal tone: no scale, softer shadows) -->
                <button type="button" id="cameraFab" aria-label="Change avatar" title="Change photo"
                  class="absolute -bottom-2 -right-2 inline-flex items-center justify-center
                        w-11 h-11 rounded-full bg-white text-gray-600 shadow-md ring-1 ring-gray-200
                        hover:bg-gray-50 focus:outline-none focus-visible:ring-2 focus-visible:ring-kku-blue">
                  <svg class="w-5 h-5 pointer-events-none" viewBox="0 0 24 24" fill="none"
                      stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" aria-hidden="true">
                    <rect x="3" y="7" width="18" height="13" rx="2" ry="2"></rect>
                    <circle cx="12" cy="13.5" r="4"></circle>
                    <path d="M8 7l2-3h4l2 3"></path>
                  </svg>
                  <span class="sr-only">Upload new avatar</span>
                </button>
              </div>
            </div>

            <!-- User info -->
            <div class="space-y-1">
              <h3 class="text-xl font-semibold tracking-tight text-gray-900 leading-tight">
                <%= student?.name %>
              </h3>
              <p class="text-sm text-gray-700">
                Student ID:
                <span class="font-medium font-mono tabular-nums"><%= student?.universityId %></span>
              </p>
              <p class="text-sm text-gray-700"><%= student?.major %></p>
            </div>

            <div class="mt-6 pt-5 border-t border-gray-200">
              <dl class="grid grid-cols-2 gap-y-2 text-[0.95rem]">
                <div>
                  <dt class="text-gray-800 font-medium">Year of Study</dt>
                  <dd class="text-gray-600"><%= student?.yearOfStudy %></dd>
                </div>
                <div>
                  <dt class="text-gray-800 font-medium">Role</dt>
                  <dd class="text-gray-600 capitalize"><%= student?.role %></dd>
                </div>
              </dl>
            </div>

            <!-- Upload actions -->
            <form action="/student/profile/avatar" method="POST" enctype="multipart/form-data"
                  class="mt-4 flex flex-wrap items-center justify-center gap-2">
              <input type="file" name="avatar" accept="image/*" id="avatarInput" class="hidden">

              <button type="button" onclick="document.getElementById('avatarInput').click()"
                class="inline-flex items-center gap-2 bg-white border border-gray-300 text-gray-800
                      hover:bg-gray-50 px-3.5 py-2 rounded-md text-sm font-medium transition-colors
                      focus:outline-none focus:ring-2 focus:ring-kku-blue">
                Change Avatar
              </button>

              <button type="submit" id="uploadAvatarBtn"
                class="hidden inline-flex items-center bg-kku-blue text-white hover:bg-kku-blue-dark
                      px-3.5 py-2 rounded-md text-sm font-medium transition-colors shadow-sm
                      focus:outline-none focus:ring-2 focus:ring-kku-blue">
                Upload
              </button>

              <button type="button" id="cancelAvatarBtn"
                class="hidden inline-flex items-center bg-white text-rose-700 border border-rose-200
                      hover:bg-rose-50 px-3.5 py-2 rounded-md text-sm font-medium transition-colors
                      focus:outline-none focus:ring-2 focus:ring-rose-300">
                Cancel
              </button>
            </form>
          </div>
        </div>

        <!-- Quick Actions -->
        <section class="bg-white rounded-2xl shadow-lg p-6 border border-gray-100">
          <h3 class="text-xl font-semibold text-gray-900 mb-5 flex items-center gap-2">
            Quick Actions
          </h3>

          <div class="space-y-3">
            <!-- Dashboard -->
            <a
              href="/student"
              class="flex items-center justify-center gap-2 bg-kku-blue hover:bg-kku-blue-dark text-white px-4 py-3 rounded-lg text-sm font-medium transition-all transform hover:scale-[1.02] shadow-sm hover:shadow-md"
            >
              <svg
                class="w-5 h-5"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M3 9.75L12 4l9 5.75V20a1 1 0 01-1 1h-5.25v-6h-5.5v6H4a1 1 0 01-1-1V9.75z"
                />
              </svg>
              Dashboard
            </a>

            <!-- Submit Form -->
            <a
              href="/student/submitform"
              class="flex items-center justify-center gap-2 bg-gray-100 hover:bg-gray-200 text-gray-700 px-4 py-3 rounded-lg text-sm font-medium transition-all transform hover:scale-[1.02] shadow-sm hover:shadow-md"
            >
              <svg
                class="w-5 h-5"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M12 4v16m8-8H4"
                ></path>
              </svg>
              Submit New Form
            </a>

            <!-- View All Form -->
            <a
              href="/student/formhistory"
              class="flex items-center justify-center gap-2 bg-gray-100 hover:bg-gray-200 text-gray-700 px-4 py-3 rounded-lg text-sm font-medium transition-all transform hover:scale-[1.02] shadow-sm hover:shadow-md"
            >
              <svg
                class="w-5 h-5"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"
                ></path>
              </svg>
              View All Form
            </a>
          </div>
        </section>
      </div>

      <!-- RIGHT: Tabs + Panels inside ONE card -->
      <div class="lg:col-span-2">
        <div class="form-section p-0 overflow-hidden">
          <!-- Tabs header (pills) -->
          <div class="px-6 pt-4 pb-3">
            <!-- เอากรอบออก เหลือเฉพาะปุ่ม -->
          <nav class="flex flex-wrap gap-3"
              aria-label="Profile sections" role="tablist">

              <!-- Profile (active) -->
              <button type="button" data-tab="info" role="tab" aria-selected="true"
            class="tab-btn group inline-flex items-center gap-2 px-5 py-4 text-sm rounded-xl
                  border transition-all focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-300
                  bg-gradient-to-r from-kku-blue to-kku-blue-dark text-white border-transparent shadow-md">
                <svg class="w-5 h-5 shrink-0" viewBox="0 0 24 24" fill="none"
                    stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" aria-hidden="true">
                  <path d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"/>
                </svg>
                <span>Personal Information</span>
              </button>

              <!-- Course & Section -->
              <button type="button" data-tab="registration" role="tab" aria-selected="false"
            class="tab-btn group inline-flex items-center gap-2 px-5 py-4 text-sm rounded-xl
                  border transition-all focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-200
                  bg-white text-gray-700 border-gray-200 hover:bg-gray-50 hover:shadow-sm">
                <!-- ใช้ไอคอนเดิมของคุณ -->
                <svg class="w-5 h-5 shrink-0" viewBox="0 0 24 24" fill="none"
                    stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" aria-hidden="true">
                  <path d="M5 3h12a3 3 0 0 1 3 3v13a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3V6a3 3 0 0 1 3-3z"></path>
                  <path d="M8 3v19"></path>
                  <path d="M12 8h5"></path>
                  <path d="M12 12h5"></path>
                </svg>
                <span>Course &amp; Section</span>
              </button>

              <!-- Change Password -->
              <button type="button" data-tab="password" role="tab" aria-selected="false"
            class="tab-btn group inline-flex items-center gap-2 px-5 py-4 text-sm rounded-xl
                  border transition-all focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-200
                  bg-white text-gray-700 border-gray-200 hover:bg-gray-50 hover:shadow-sm">
                <svg class="w-5 h-5 shrink-0" viewBox="0 0 24 24" fill="none"
                    stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" aria-hidden="true">
                  <rect x="3" y="11" width="18" height="10" rx="2"/>
                  <path d="M7 11V7a5 5 0 0110 0v4"/>
                </svg>
                <span>Change Password</span>
              </button>
            </nav>
          </div>

          <!-- เส้นคั่นแท็บกับเนื้อหา -->
          <div class="border-t border-gray-200"></div>

          <!-- PANELS -->
          <section data-tab-panel="info" class="tab-panel p-6" role="tabpanel">
            <div class="pb-4">
              <h3 class="text-lg font-semibold text-gray-900">Personal Information</h3>
              <p class="text-gray-600 text-sm mt-1">Update your personal details and contact information.</p>
            </div>

            <!-- Personal form (unchanged) -->
            <form action="/student/profile/update" method="POST" class="pt-2">
              <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <label for="name" class="block text-sm font-medium text-gray-800 mb-1">Full Name</label>
                  <input type="text" id="name" name="name" value="<%= student?.name %>" required
                         class="w-full px-3 py-2 border rounded-md bg-white shadow-sm transition focus:outline-none focus:ring-2 focus:ring-kku-blue focus:border-transparent border-gray-300">
                </div>

                <div>
                  <label for="studentId" class="block text-sm font-medium text-gray-800 mb-1">Student ID</label>
                  <input type="text" id="studentId" value="<%= student?.universityId %>" readonly
                         class="w-full px-3 py-2 bg-gray-50 border border-gray-200 rounded-md text-gray-700 shadow-sm">
                </div>

                <div>
                  <label for="email" class="block text-sm font-medium text-gray-800 mb-1">Email Address</label>
                  <input type="email" id="email" name="email" value="<%= student?.email %>" required
                         class="w-full px-3 py-2 border rounded-md bg-white shadow-sm transition focus:outline-none focus:ring-2 focus:ring-kku-blue focus:border-transparent border-gray-300">
                  <p class="text-xs text-gray-500 mt-1">โปรดใช้เมลมหาวิทยาลัยเพื่อความสะดวกในการติดต่อ</p>
                </div>

                <div>
                  <label for="phone" class="block text-sm font-medium text-gray-800 mb-1">Phone Number</label>
                  <input type="tel" id="phone" name="phone" value="<%= student?.phone || '' %>" required
                         pattern="^0[0-9]{9}$" title="กรุณากรอกหมายเลขโทรศัพท์ให้ถูกต้อง เช่น 0812345678"
                         class="w-full px-3 py-2 border rounded-md bg-white shadow-sm transition focus:outline-none focus:ring-2 focus:ring-kku-blue focus:border-transparent border-gray-300">
                </div>

                <div>
                  <label for="dateOfBirth" class="block text-sm font-medium text-gray-800 mb-1">Date of Birth</label>
                  <input type="date" id="dateOfBirth" name="dateOfBirth"
                         value="<%= student?.dateOfBirth ? new Date(student.dateOfBirth).toISOString().split('T')[0] : '' %>"
                         class="w-full px-3 py-2 border rounded-md bg-white shadow-sm transition focus:outline-none focus:ring-2 focus:ring-kku-blue focus:border-transparent border-gray-300">
                </div>

                <div>
                  <label for="major" class="block text-sm font-medium text-gray-800 mb-1">Department</label>
                  <input type="text" id="major" value="<%= student?.major %>" readonly
                         class="w-full px-3 py-2 bg-gray-50 border border-gray-200 rounded-md text-gray-700 shadow-sm">
                </div>

                <div class="md:col-span-2">
                  <label for="address" class="block text-sm font-medium text-gray-800 mb-1">Address</label>
                  <textarea id="address" name="address" rows="3"
                            class="w-full px-3 py-2 border rounded-md bg-white shadow-sm transition focus:outline-none focus:ring-2 focus:ring-kku-blue focus:border-transparent border-gray-300"><%= student?.address || '' %></textarea>
                </div>
              </div>

              <!-- Academic (read-only) -->
              <div class="mt-8 pt-6 border-t border-gray-200">
                <h3 class="text-lg font-semibold text-gray-900">Academic Information</h3>
                <p class="text-gray-600 text-sm mt-1">View your academic details. Contact the registrar to make changes.</p>

                <div class="mt-4 grid grid-cols-1 md:grid-cols-2 gap-6">
                  <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Department</label>
                    <input type="text" value="<%= student?.major %>" readonly
                           class="w-full px-3 py-2 bg-gray-100 border border-gray-300 rounded-md text-gray-600">
                  </div>
                  <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Faculty</label>
                    <input type="text" value="College of Computing" readonly
                           class="w-full px-3 py-2 bg-gray-100 border border-gray-300 rounded-md text-gray-600">
                  </div>
                  <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Year of Study</label>
                    <input type="text" value="<%= student?.yearOfStudy %>" readonly
                           class="w-full px-3 py-2 bg-gray-100 border border-gray-300 rounded-md text-gray-600">
                  </div>
                  <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Role</label>
                    <input type="text" value="<%= student?.role %>" readonly
                           class="w-full px-3 py-2 bg-gray-100 border border-gray-300 rounded-md text-gray-600 capitalize">
                  </div>
                </div>

                <p class="mt-4 text-sm text-gray-600">
                  <svg class="w-4 h-4 inline mr-1" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path>
                  </svg>
                  To update academic information, please contact the registrar's office or your academic advisor.
                </p>
              </div>

              <div class="mt-6 flex justify-end gap-3">
                <button type="reset" class="bg-white border border-gray-300 text-gray-700 px-6 py-2 rounded-md hover:bg-gray-50 transition-colors font-medium">Cancel</button>
                <button type="submit" class="bg-kku-blue text-white px-6 py-2 rounded-md hover:bg-kku-blue-dark transition-colors font-medium shadow">Save Changes</button>
              </div>
            </form>
          </section>

          <section data-tab-panel="registration" class="tab-panel hidden p-6" role="tabpanel">
            <div class="pb-4">
              <div class="flex items-center justify-between">
                <div>
                  <h3 class="text-lg font-semibold text-gray-900">Course & Section Registration</h3>
                  <% if (!canRegister) { %>
                    <p class="text-gray-600 text-sm mt-1">You have already registered. If you need to make changes, please contact the Admin.</p>
                  <% } else { %>
                    <p class="text-gray-600 text-sm mt-1">Search and register for available courses and sections.</p>
                  <% } %>
                </div>
                <% if (canRegister) { %>
                  <span id="courseCountBadge" class="hidden text-xs bg-gray-100 text-gray-700 px-2 py-1 rounded-full">0 results</span>
                <% } %>
              </div>
            </div>

            <% if (canRegister) { %>
            <!-- Search Bar -->
            <div class="mb-4 relative">
              <span class="absolute left-3 top-1/2 -translate-y-1/2 pointer-events-none">
                <svg class="w-4 h-4 text-gray-400" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                  <circle cx="11" cy="11" r="7" stroke-width="2"></circle>
                  <path d="M20 20l-3.5-3.5" stroke-width="2" stroke-linecap="round"></path>
                </svg>
              </span>
              <input type="text" id="courseSearch" placeholder="Search by course name or ID…"
                     class="w-full pl-9 pr-3 py-2 border border-gray-300 rounded-md bg-white shadow-sm
                            focus:outline-none focus:ring-2 focus:ring-kku-blue focus:border-transparent">
            </div>

            <form action="/student/profile/courses" method="POST" class="space-y-4">
              <!-- Results -->
              <div id="coursesContainer" class="space-y-3">
                <div class="border border-dashed border-gray-300 rounded-lg p-6 text-center">
                  <p class="text-sm text-gray-500">Start typing to search for courses…</p>
                </div>
              </div>

              <!-- Actions -->
              <div class="mt-6 flex justify-end gap-3 pt-4 border-t border-gray-200">
                <button type="reset" class="bg-white border border-gray-300 text-gray-700 px-6 py-2 rounded-md hover:bg-gray-50 transition-colors font-medium">Cancel</button>
                <button type="submit" class="bg-kku-blue text-white px-6 py-2 rounded-md hover:bg-kku-blue-dark transition-colors font-medium shadow">Register Selected</button>
              </div>
            </form>
            <% } %>

            <!-- Registered -->
            <% if (student?.courses && student.courses.length > 0) { %>
            <div class="mt-8 pt-6 border-t border-gray-200">
              <h4 class="text-md font-semibold text-gray-900 mb-3 flex items-center gap-2">
                Registered Courses
                <span class="text-xs bg-green-50 text-green-700 border border-green-200 px-2 py-0.5 rounded-full"><%= student.courses.length %> enrolled</span>
                <span class="text-sm font-normal text-gray-600">(Contact Admin to change)</span>
              </h4>

              <div class="space-y-3">
                <% student.courses.forEach(course => { 
                  const courseId = (course && (course._id || course)).toString();
                  const courseData = allCourses.find(c => c._id.toString() === courseId);
                  if (!courseData) { return; }
                %>
                  <div class="border border-gray-200 p-4 rounded-lg bg-gray-50 hover:bg-white hover:shadow-sm transition">
                    <div class="flex items-start justify-between">
                      <div class="flex-1">
                        <p class="font-semibold text-gray-900"><%= courseData.name %></p>
                        <p class="text-sm text-gray-600">Course ID: <%= courseData.courseId %></p>
                      </div>
                      <span class="bg-green-100 text-green-800 text-xs px-2 py-1 rounded">Enrolled</span>
                    </div>

                    <div class="mt-3">
                      <label class="block text-sm font-medium text-gray-700 mb-1">Section</label>
                      <select class="w-full px-3 py-2 bg-gray-100 border border-gray-300 rounded-md text-gray-600" disabled>
                        <% courseData.sections.forEach(sec => { 
                          const hasThisSection = (student.sections || []).some(s => {
                            const sid = (s && (s._id || s)).toString();
                            return sid === sec._id.toString();
                          });
                        %>
                          <option value="<%= sec._id %>" <%= hasThisSection ? 'selected' : '' %>><%= sec.name %></option>
                        <% }) %>
                      </select>
                    </div>
                  </div>
                <% }) %>
              </div>
            </div>
            <% } %>
          </section>

          <section data-tab-panel="password" class="tab-panel hidden p-6" role="tabpanel">
            <div class="pb-4">
              <h3 class="text-lg font-semibold text-gray-900">Change Password</h3>
              <p class="text-gray-600 text-sm mt-1">Update your password to keep your account secure.</p>
            </div>

            <form action="/student/profile/change-password" method="POST" class="pt-2">
              <div class="space-y-6">
                <div>
                  <label for="oldPassword" class="block text-sm font-medium text-gray-800 mb-1">Current Password</label>
                  <input type="password" id="oldPassword" name="oldPassword" required
                         class="w-full px-3 py-2 border rounded-md bg-white shadow-sm transition focus:outline-none focus:ring-2 focus:ring-kku-blue focus:border-transparent <%= (typeof fieldErrors !== 'undefined' && fieldErrors && fieldErrors.oldPassword) ? 'border-red-500 ring-1 ring-red-300' : 'border-gray-300' %>" placeholder="รหัสผ่านเดิม">
                  <% if (typeof fieldErrors !== 'undefined' && fieldErrors && fieldErrors.oldPassword) { %>
                    <div class="text-xs mt-1 text-red-600"><%= fieldErrors.oldPassword %></div>
                  <% } %>
                </div>

                <div>
                  <label for="newPassword" class="block text-sm font-medium text-gray-800 mb-1">New Password</label>
                  <input type="password" id="newPassword" name="newPassword" required minlength="8"
                         pattern="^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).{8,}$"
                         oninvalid="this.setCustomValidity('รหัสผ่านต้องมีอย่างน้อย 8 ตัว และมีตัวพิมพ์ใหญ่ ตัวพิมพ์เล็ก และตัวเลขอย่างน้อย 1 ตัว')"
                         oninput="this.setCustomValidity('')"
                         class="w-full px-3 py-2 border rounded-md bg-white shadow-sm transition focus:outline-none focus:ring-2 focus:ring-kku-blue focus:border-transparent <%= (typeof fieldErrors !== 'undefined' && fieldErrors && fieldErrors.newPassword) ? 'border-red-500 ring-1 ring-red-300' : 'border-gray-300' %>" placeholder="รหัสผ่านใหม่" />
                  <% if (typeof fieldErrors !== 'undefined' && fieldErrors && fieldErrors.newPassword) { %>
                    <div class="text-xs mt-1 text-red-600"><%= fieldErrors.newPassword %></div>
                  <% } %>

                  <div class="mt-3 rounded-md bg-gray-50 border border-gray-200 p-3">
                    <div class="text-xs text-gray-700 font-medium">Password must contain:</div>
                    <ul class="text-xs text-gray-600 mt-1 space-y-1">
                      <li id="lengthCheck" class="flex items-center"><span class="w-4 h-4 mr-2">❌</span>At least 8 characters</li>
                      <li id="uppercaseCheck" class="flex items-center"><span class="w-4 h-4 mr-2">❌</span>One uppercase letter</li>
                      <li id="lowercaseCheck" class="flex items-center"><span class="w-4 h-4 mr-2">❌</span>One lowercase letter</li>
                      <li id="numberCheck" class="flex items-center"><span class="w-4 h-4 mr-2">❌</span>One number</li>
                    </ul>
                  </div>
                </div>

                <div>
                  <label for="confirmPassword" class="block text-sm font-medium text-gray-800 mb-1">Confirm New Password</label>
                  <input type="password" id="confirmPassword" name="confirmPassword" required
                         class="w-full px-3 py-2 border rounded-md bg-white shadow-sm transition focus:outline-none focus:ring-2 focus:ring-kku-blue focus:border-transparent <%= (typeof fieldErrors !== 'undefined' && fieldErrors && fieldErrors.confirmPassword) ? 'border-red-500 ring-1 ring-red-300' : 'border-gray-300' %>" placeholder="ยืนยันรหัสผ่านใหม่">
                  <div id="passwordMatch" class="text-xs mt-1 hidden"></div>
                  <% if (typeof fieldErrors !== 'undefined' && fieldErrors && fieldErrors.confirmPassword) { %>
                    <div class="text-xs mt-1 text-red-600"><%= fieldErrors.confirmPassword %></div>
                  <% } %>
                </div>
              </div>

              <div class="mt-6 flex justify-end gap-3">
                <button type="reset" class="bg-white border border-gray-300 text-gray-700 px-6 py-2 rounded-md hover:bg-gray-50 transition-colors font-medium">Cancel</button>
                <button type="submit" class="bg-kku-blue text-white px-6 py-2 rounded-md hover:bg-kku-blue-dark transition-colors font-medium shadow">Change Password</button>
              </div>
            </form>
          </section>
        </div>
      </div>
    </div>
  </main>

  <!-- Footer -->
  <footer class="bg-gray-100 text-gray-600 py-4 text-center text-sm mt-8">
    <p>&copy; 2024 Faculty of Computer Science, Khon Kaen University. All rights reserved.</p>
  </footer>

  <script>
    // Navigation
    function goToDashboard() { window.location.href = '/student'; }

    // =========================
    // Tabs (Pills on single card)
    // =========================
    (function() {
      const tabBtns = Array.from(document.querySelectorAll('.tab-btn[data-tab]'));
      const panels  = Array.from(document.querySelectorAll('[data-tab-panel]'));
function setActiveStyles(btn, active) {
  if (active) {
    btn.setAttribute('aria-selected', 'true');
    btn.classList.add(
      'bg-gradient-to-r','from-kku-blue','to-kku-blue-dark',
      'text-white','border-transparent','shadow-md','font-semibold'
    );
    btn.classList.remove(
      'bg-white','text-gray-700','border-gray-200','hover:bg-gray-50','hover:shadow-sm','font-medium'
    );
  } else {
    btn.setAttribute('aria-selected', 'false');
    btn.classList.add(
      'bg-white','text-gray-700','border-gray-200','hover:bg-gray-50','hover:shadow-sm','font-medium'
    );
    btn.classList.remove(
      'bg-gradient-to-r','from-kku-blue','to-kku-blue-dark',
      'text-white','border-transparent','shadow-md','font-semibold'
    );
  }
}

      function showTab(name) {
        panels.forEach(p => p.classList.toggle('hidden', p.getAttribute('data-tab-panel') !== name));
        tabBtns.forEach(b => setActiveStyles(b, b.getAttribute('data-tab') === name));
      }

      tabBtns.forEach(btn => {
        btn.addEventListener('click', () => showTab(btn.getAttribute('data-tab')));
      });

      // default
      showTab('info');
    })();

    // =========================
    // Avatar Instant Preview
    // =========================
    (function () {
      const avatarInputEl = document.getElementById('avatarInput');
      const uploadBtn     = document.getElementById('uploadAvatarBtn');
      const cancelBtn     = document.getElementById('cancelAvatarBtn');
      const avatarImg     = document.querySelector('.profile-avatar img');
      const wrapper    = document.getElementById('avatarWrapper');
      const cameraFab  = document.getElementById('cameraFab');

      if (!avatarInputEl || !uploadBtn || !avatarImg) return;

      if (!avatarImg.dataset.original) {
        avatarImg.dataset.original = avatarImg.src;
      }

      let previewObjectUrl = null;   

      function showPreview(file) {
        if (previewObjectUrl) URL.revokeObjectURL(previewObjectUrl);
        previewObjectUrl = URL.createObjectURL(file);
        avatarImg.src = previewObjectUrl;
        uploadBtn.classList.remove('hidden');
        if (cancelBtn) cancelBtn.classList.remove('hidden');
      }

      function resetPreview() {
        if (previewObjectUrl) {
          URL.revokeObjectURL(previewObjectUrl);
          previewObjectUrl = null;
        }
        avatarImg.src = avatarImg.dataset.original || avatarImg.src;
        avatarInputEl.value = '';
        uploadBtn.classList.add('hidden');
        if (cancelBtn) cancelBtn.classList.add('hidden');
      }

      if (wrapper)   wrapper.addEventListener('click', () => avatarInputEl.click());
      if (cameraFab) cameraFab.addEventListener('click', () => avatarInputEl.click());

      avatarInputEl.addEventListener('change', (e) => {
        const file = e.target.files && e.target.files[0];
        if (!file) { resetPreview(); return; }

        const validTypes = ['image/png','image/jpeg','image/jpg','image/gif','image/webp'];
        if (!validTypes.includes(file.type)) {
          alert('ไฟล์ต้องเป็นรูป .png/.jpg/.jpeg/.gif/.webp เท่านั้น กรุณาเลือกไฟล์ใหม่');
          resetPreview();
          return;
        }
        const maxBytes = 5 * 1024 * 1024; // 5MB
        if (file.size > maxBytes) {
          alert('ไฟล์ใหญ่เกิน 5MB กรุณาเลือกไฟล์ใหม่');
          resetPreview();
          return;
        }
        showPreview(file);
      });

      if (cancelBtn) cancelBtn.addEventListener('click', resetPreview);

      const form = avatarInputEl.closest('form');
      if (form) form.addEventListener('reset', resetPreview);
    })();

    // =========================
    // Password Validation
    // =========================
    const newPasswordInput = document.getElementById('newPassword');
    const confirmPasswordInput = document.getElementById('confirmPassword');

    if (newPasswordInput) newPasswordInput.addEventListener('input', validatePassword);
    if (confirmPasswordInput) confirmPasswordInput.addEventListener('input', checkPasswordMatch);

    function validatePassword() {
      const password = newPasswordInput.value;
      updateCheck('lengthCheck', password.length >= 8);
      updateCheck('uppercaseCheck', /[A-Z]/.test(password));
      updateCheck('lowercaseCheck', /[a-z]/.test(password));
      updateCheck('numberCheck', /\d/.test(password));
    }

    function updateCheck(id, isValid) {
      const element = document.getElementById(id);
      const icon = element ? element.querySelector('span') : null;
      if (!element || !icon) return;
      if (isValid) {
        icon.textContent = '✅';
        element.classList.add('text-green-600');
        element.classList.remove('text-gray-600');
      } else {
        icon.textContent = '❌';
        element.classList.add('text-gray-600');
        element.classList.remove('text-green-600');
      }
    }

    function checkPasswordMatch() {
      const newPassword = newPasswordInput ? newPasswordInput.value : '';
      const theConfirm = confirmPasswordInput ? confirmPasswordInput.value : '';
      const matchElement = document.getElementById('passwordMatch');
      if (!matchElement) return;

      if (theConfirm.length > 0) {
        matchElement.classList.remove('hidden');
        if (newPassword === theConfirm) {
          matchElement.textContent = '✅ Passwords match';
          matchElement.className = 'text-xs mt-1 text-green-600';
        } else {
          matchElement.textContent = '❌ Passwords do not match';
          matchElement.className = 'text-xs mt-1 text-red-600';
        }
      } else {
        matchElement.classList.add('hidden');
      }
    }

    // =========================
    // Course Search (when canRegister)
    // =========================
    const CAN_REGISTER = <%= canRegister ? 'true' : 'false' %>;
    if (CAN_REGISTER) {
      const searchInput      = document.getElementById('courseSearch');
      const coursesContainer = document.getElementById('coursesContainer');
      const countBadge       = document.getElementById('courseCountBadge');

      const allCourses = <%- JSON.stringify(allCourses) %>;
      const registeredCourseIds = <%- JSON.stringify((student?.courses || []).map(c => (c && (c._id || c)).toString())) %>;

      function renderEmpty(text) {
        coursesContainer.innerHTML = `
          <div class="border border-dashed border-gray-300 rounded-lg p-6 text-center">
            <p class="text-sm text-gray-500">${text}</p>
          </div>`;
      }

      function updateCount(n) {
        if (!countBadge) return;
        countBadge.textContent = `${n} ${n === 1 ? 'result' : 'results'}`;
        countBadge.classList.toggle('hidden', false);
      }

      function debounce(fn, ms) {
        let t; return (...args) => { clearTimeout(t); t = setTimeout(() => fn.apply(this, args), ms); };
      }

      function onSearchInput(e) {
        const query = e.target.value.toLowerCase().trim();
        coursesContainer.innerHTML = '';

        if (!query) {
          renderEmpty('Start typing to search for courses...');
          if (countBadge) countBadge.classList.add('hidden');
          return;
        }

        const filteredCourses = allCourses
          .filter(course => {
            if (registeredCourseIds.includes(course._id.toString())) return false;
            const name = (course.name || '').toLowerCase();
            const id   = (course.courseId || '').toLowerCase();
            return name.includes(query) || id.includes(query);
          })
          .sort((a,b) => (a.name||'').localeCompare(b.name||''));

        if (filteredCourses.length === 0) {
          renderEmpty('No courses found matching your search.');
          updateCount(0);
          return;
        }

        updateCount(filteredCourses.length);

        filteredCourses.forEach(course => {
          const wrapper = document.createElement('div');
          wrapper.className = 'rounded-lg';

          let sectionOptions = '';
          (course.sections || []).forEach(sec => {
            sectionOptions += `<option value="${sec._id}">${sec.name}</option>`;
          });

          wrapper.innerHTML = `
            <label class="flex items-start cursor-pointer">
              <input type="checkbox" name="selectedCourses" value="${course._id}"
                class="peer mt-1 h-4 w-4 text-kku-blue focus:ring-kku-blue border-gray-300 rounded">
              <div class="ml-3 flex-1 border border-gray-200 rounded-lg p-4 bg-white shadow-sm hover:shadow transition
                          peer-checked:border-kku-blue peer-checked:bg-blue-50">
                <div class="flex items-center justify-between">
                  <div>
                    <div class="font-semibold text-gray-900">${course.name}</div>
                    <div class="text-sm text-gray-600">Course ID: ${course.courseId}</div>
                  </div>
                  <span class="hidden peer-checked:inline-block text-xs bg-blue-100 text-kku-blue px-2 py-0.5 rounded">Selected</span>
                </div>
                <div class="mt-3">
                  <label class="block text-sm font-medium text-gray-700 mb-1">Select Section:</label>
                  <select name="selectedSections_${course._id}" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-kku-blue focus:border-transparent">
                    ${sectionOptions}
                  </select>
                </div>
              </div>
            </label>
          `;
          coursesContainer.appendChild(wrapper);
        });
      }

      if (searchInput && coursesContainer) {
        searchInput.addEventListener('input', debounce(onSearchInput, 200));
        renderEmpty('Start typing to search for courses...');
      }
    }
  </script>
</body>
</html>
